{"version":3,"sources":["component/card/card.js","component/CardList/CardList.js","component/searchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","moster","className","src","id","alt","name","email","CardList","mosters","map","SearchBox","placeholder","searchInput","type","onChange","App","e","setState","searchField","target","value","state","a","fetch","res","this","json","mostersList","filter","toLowerCase","match","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAeeA,EAZF,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACd,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAOG,GAAjC,0BACHC,IAAI,QAEN,6BAAKJ,EAAOK,OACZ,4BAAIL,EAAOM,YCEFC,EATE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClB,OACE,qBAAKP,UAAU,YAAf,SACGO,EAAQC,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOG,UCOXO,G,MAZG,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAChC,OACE,cAAC,WAAD,UACE,uBACEX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,QC4BHG,E,kDAhCb,aAAe,IAAD,8BACZ,gBAWFH,YAAc,SAACI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAXtC,EAAKC,MAAQ,CACXb,QAAS,GACTU,YAAa,IAJH,E,4FAOd,4BAAAI,EAAA,sEACkBC,MAAM,8CADxB,cACMC,EADN,YAEEC,KAFF,SAEiCD,EAAIE,OAFrC,yBAEkBlB,QAFlB,WAEOS,SAFP,gE,0EAQA,WACE,MAAiCQ,KAAKJ,MAA9Bb,EAAR,EAAQA,QAASU,EAAjB,EAAiBA,YACXS,EAAcnB,EAAQoB,QAAO,SAAC5B,GAAD,OACjCA,EAAOK,KAAKwB,cAAcC,MAAMZ,MAElC,OACE,sBAAKjB,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEU,YAAY,iBACZC,YAAaa,KAAKb,cAEpB,cAAC,EAAD,CAAUJ,QAASmB,W,GA5BTI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e342abd8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nconst Card = ({ moster }) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        src={`https://robohash.org/${moster.id}?set=set2&size=180x180`}\r\n        alt=\"img\"\r\n      />\r\n      <h2>{moster.name}</h2>\r\n      <p>{moster.email}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nimport Card from 'component/card/card';\r\nconst CardList = ({ mosters }) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {mosters.map((moster) => (\r\n        <Card key={moster.id} moster={moster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default CardList;\r\n","import React, { Fragment } from 'react';\r\nimport './style.css';\r\n\r\nconst SearchBox = ({ placeholder, searchInput }) => {\r\n  return (\r\n    <Fragment>\r\n      <input\r\n        className=\"search\"\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={searchInput}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default SearchBox;\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport CardList from './component/CardList/CardList';\nimport SearchBox from 'component/searchBox/SearchBox';\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      mosters: [],\n      searchField: '',\n    };\n  }\n  async componentDidMount() {\n    var res = await fetch('https://jsonplaceholder.typicode.com/users');\n    this.setState({ mosters: await res.json() });\n    // res = await res.json();\n  }\n  searchInput = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n  render() {\n    const { mosters, searchField } = this.state;\n    const mostersList = mosters.filter((moster) =>\n      moster.name.toLowerCase().match(searchField)\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n          placeholder=\"search results\"\n          searchInput={this.searchInput}\n        />\n        <CardList mosters={mostersList} />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}